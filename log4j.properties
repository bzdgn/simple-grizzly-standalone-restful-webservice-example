# Configure a logging instances that catches everything we throw to the logging system
# stdout        ==> to portainer console and accessible through docker service logs <service_name>
# rollingfile   ==> circular log file located at /docker_files/log/service_name
log4j.rootLogger=ALL, stdout, rollingfile

# The settings for the stdout logger target
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out

# Setting the threshold to WARN level.
# This means that the container will not overflow with too much information. Only WARN, ERROR and FATAL will be shown
#log4j.appender.stdout.threshold=TRACE
log4j.appender.stdout.threshold=INFO
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy MMM dd HH:mm:ss,SSS} %p %c{1}: %m%n

# The settings for the circular file
log4j.appender.rollingfile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.rollingfile.DatePattern='-'yyyy-MM-dd'.log'

# Setting the threshold to DEBUG this means that DEBUG and INFO messages will be caught here as well.
# One deeper level still exists. The TRACE level. This is hardly ever needed but can be used for short
#   periods of time
log4j.appender.rollingfile.threshold=INFO

# Name of the active log file.
# Archived files will be appended by date
#log4j.appender.rollingfile.File=/opt/log/application.log

#Set your target folder configuration in here
log4j.appender.rollingfile.File=D:/CONFIG_BASE/application.log
log4j.appender.rollingfile.layout=org.apache.log4j.PatternLayout
log4j.appender.rollingfile.layout.ConversionPattern=%d{yyyy MMM dd HH:mm:ss,SSS} %p %c{1}: %m%n

# Making sure no file will ever grow larger as 1GB
#log4j.appender.rollingfile.MaxFileSize=1GB

# Automatic cleanup if more than 6 files are present. To prevent flooding of the log volume.
#log4j.appender.rollingfile.MaxBackupIndex=6
